module PE_Prob012

open PE_Commons

// The sequence of triangle numbers is generated by adding the natural numbers. 
// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
//                  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//
// Let us list the factors of the first seven triangle numbers:
//
//           1: 1
//           3: 1,3
//           6: 1,2,3,6
//          10: 1,2,5,10
//          15: 1,3,5,15
//          21: 1,3,7,21
//          28: 1,2,4,7,14,28
//
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?

let triangleNumbers =
    let rec loop n tot =
        let sum = n + tot in
        seq {
            yield sum;
            yield! loop (n+1) sum
        }
    loop 1 0

let divisors (n:int64) =
    n |> 
        primeFactors |> 
        List.groupBy id |> 
        List.map (snd >> List.length >> ((+) 1)) |>
        List.reduce (*)

let solution limit =
    triangleNumbers
    |> Seq.skip 1
    |> Seq.skipWhile (fun tn -> (tn |> int64 |> divisors) <= limit)
    |> Seq.head